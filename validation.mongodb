/*
USERS
    firstName * - string
    lastName * - string
    email * - string
    password * - string
    address - object {
            +street
            +city
            +house
        }
    birthday - date
    gender - string



*/

db.createCollection('users', {
    validator: {
        $jsonSchema: {
            required: ['firstName', 'lastName', 'email', 'password'],
            properties: {
                firstName: {
                    bsonType: 'string',
                    description: 'must be a string and is required'
                },
                lastName: {
                    bsonType: 'string',
                    description: 'must be a string and is required'
                },
                email: {
                    bsonType: 'string',
                    description: 'must be a string and is required'
                },
                password: {
                    bsonType: 'string',
                    description: 'must be a string and is required'
                },
                birthday: {
                    bsonType: 'date',
                    description: 'must be a date'
                },
                gender: {
                    bsonType: 'string',
                    description: 'must be a string'
                },
                address: {
                    bsonType: 'object',
                    required: ['city', 'street'],
                    description: 'must be an object',
                    properties: {
                        city: {
                            bsonType: 'string',
                            description: 'must be an string and is required',
                        },
                        street: {
                            bsonType: 'string',
                            description: 'must be an string and is required',

                        },
                        house: {
                            bsonType: 'int',
                            description: 'must be an int',

                        }
                    }

                }
            }
        }
    }
});

db.users.insertOne({
    firstName: 'test',
    lastName: 'test',
    email: 'test@gmail.com',
    password: '1234',
    gender: 'male',
});



db.createCollection('products', {
    validator: {
        $jsonSchema: {
            required: ['name', 'category', 'price'],
            properties: {
                name: {
                    bsonType: 'string',
                    description: 'must be a string and is required'
                },
                category: {
                    bsonType: 'string',
                    description: 'must be a string and is required'
                },
                price: {
                    bsonType: 'double',
                    description: 'must be a double and is required'
                },
                discountPrice: {
                    bsonType: 'double',
                    description: 'must be a double'
                },
                description: {
                    bsonType: 'string',
                    description: 'must be a string'
                },
                manufacturer: {
                    bsonType: 'object',
                    description: 'must be an object',
                    properties: {
                        name: {
                            bsonType: 'string',
                            description: 'must be a string'
                        },
                        city: {
                            bsonType: 'string',
                            description: 'must be a string'
                        },
                    }
                },
                color: {
                    bsonType: 'array',
                    description: 'must be an array'

                }
            }
        }
    }
});

db.createCollection('books', {
    validator: {
        $jsonSchema: {
            required: ['name', 'author'],
            properties: {
                name: {
                    bsonType: 'string',
                    description: 'must be a string and is required'
                },
                author: {
                    bsonType: 'object',
                    required: ['name', 'lastName'],
                    description: 'must be an object',
                    properties: {
                        name: {
                            bsonType: 'string',
                            description: 'must be a string and is required'
                        },
                        lastName: {
                            bsonType: 'string',
                            description: 'must be a string and is required'
                        },
                        birthday: {
                            bsonType: 'date',
                            description: 'must be an date',
                        }
                    }
                },
                edition: {
                    bsonType: 'int',
                    description: 'must be int',
                },
                ISBN: {
                    bsonType: 'string',
                    description: 'must be string',
                },
                cover_type: {
                    bsonType: 'string',
                    description: 'must be string',
                }

            }
        }
    }
});

db.products.insertMany([
    {
        name: 'Samsung 14X UOI_3293',
        category: 'phones',
        price: 780.54
    },
    {
        name: 'Xiaomi Re-me S3',
        category: 'phones',
        price: 500.65
    },
    {
        name: 'Realm-e x7',
        category: 'phones',
        price: 590.434
    },
    {
        name: 'Iphone 12x',
        category: 'phones',
        price: 1280.32432
    }]);

db.getCollectionInfos({name: 'products'});

db.books.insertMany([
    {
        name: 'The Whispering Shadows',
        author: {
            name: 'Emily',
            lastName: 'Johnson'
        }
    },
    {
        name: 'Echoes of Destiny',
        author: {
            name: 'Michael',
            lastName: 'Thompson'
        }
    },
    {
        name: 'The Enigma Code',
        author: {
            name: 'Sophia',
            lastName: 'Rodriguez'
        }
    },
    {
        name: 'Beyond the Horizon',
        author: {
            name: 'David',
            lastName: 'Wilson'
        }
    }]);

db.books.insertMany([
    {
        name: 'To Kill a Mockingbird',
        author: {
            name: 'Harper',
            lastName: 'Lee',
            birthday: new Date('1926-04-28')
        },
        edition: 1,
        ISBN: '9780061120084',
        cover_type: 'Paperback'
    },
    {
        name: '1984',
        author: {
            name: 'George',
            lastName: 'Orwell',
            birthday: new Date('1903-06-25')
        },
        edition: 3,
        ISBN: '9780451524935',
        cover_type: 'Hardcover'
    },
    {
        name: 'The Great Gatsby',
        author: {
            name: 'F. Scott',
            lastName: 'Fitzgerald',
            birthday: new Date('1896-09-24')
        },
        edition: 2,
        ISBN: '9780743273565',
        cover_type: 'Paperback'
    },
    {
        name: 'Pride and Prejudice',
        author: {
            name: 'Jane',
            lastName: 'Austen',
            birthday: new Date('1775-12-16')
        },
        edition: 1,
        ISBN: '9780141439518',
        cover_type: 'Paperback'
    },
    {
        name: 'To the Lighthouse',
        author: {
            name: 'Virginia',
            lastName: 'Woolf',
            birthday: new Date('1882-01-25')
        },
        edition: 1,
        ISBN: '9780156907392',
        cover_type: 'Paperback'
    }
]);
