db.createCollection('manufacturer', {
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            required: ['name'],
            properties: {
                name: {
                    bsonType: 'string'
                },
                address: {
                    bsonType: 'object',
                    required: ['country', 'city']
                }
            }
        }
    }
});

db.manufacturer.insertMany([
    {
        name: 'Apple',
        address: {
            country: 'USA',
            city: 'NY'
        }
    },
    {
        name: 'Sony',
        address: {
            country: 'China',
            city: 'Pekin'
        }
    },
    {
        name: 'Samsung',

    }
]);

db.createCollection('products', {
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            required: ['name', 'price', 'amount'],
            properties: {
                name: {
                    bsonType: 'string'
                },
                price: {
                    bsonType: 'double',
                },
                amount: {
                    bsonType: 'int',
                },
                expiredDate: {
                    bsonType: 'date',
                },
                 manufacturerId: {
                    bsonType: 'objectId'
                }
            }
        }
    }
});

db.products.insertMany([
    {
        name: 'iPhone',
        price: 200.67,
        amount: 20,
        expiredDate: new Date(),
        manufacturerId: new ObjectId('64992dc997f3ff4ada8f3b99')
    },
    {
        name: 'S10',
        price: 400.57,
        amount: 40,
        manufacturerId: new ObjectId('64992dc997f3ff4ada8f3b9b')
    },
    {
        name: 'iPad',
        price: 650.67,
        amount: 20,
        manufacturerId: new ObjectId('64992dc997f3ff4ada8f3b99')

    },
    {
        name: '40S',
        price: 500.67,
        amount: 20,
        expiredDate: new Date(),
        manufacturerId: new ObjectId('64992dc997f3ff4ada8f3b9b')
    }

]);

db.products.aggregate([{
    $lookup: {
        from: 'manufacturer',
        localField: 'manufacturerId',
        foreignField: '_id',
        as: 'manuf'
    }
}, {
    $unwind: {
        path: '$manuf'
    }
},
    {
    $unset: 'manufacturerId'
    },
    {
    $group: {
        _id: '$manuf.name',
        countPositions: {
            $count: {}
        }
    }
}]);



db.products.find();